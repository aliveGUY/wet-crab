import { ScrollView } from "std-widgets.slint";
import { Button } from "std-widgets.slint";

global Colors {
    out property <color> panel-background: #17181ba4;
    out property <color> card-background: #202124;
    out property <color> input-background: #282a2d;
    out property <color> input-border: #5f6368;
    out property <color> button-background: #282a2d;
    out property <color> card-background-selected: yellow;
    out property <color> text-color: white;
    out property <color> text-color-selected: black;
}

global InterfaceState {
    in-out property <int> selected-index: -1;
    in-out property <string> selected-title: "";
}

component EnitityListItem {
    in property <string> title;
    in property <int> index;

    TouchArea {
        width: 100%;
        mouse-cursor: pointer;
        Rectangle {
            border-radius: 6px;
            background: InterfaceState.selected-index == index ? Colors.card-background-selected : Colors.card-background;
            border-width: 1px;
            border-color: parent.has-hover ? Colors.card-background-selected : Colors.card-background;
            VerticalLayout {
                padding-top: 8px;
                padding-bottom: 8px;
                padding-left: 12px;
                padding-right: 12px;

                Text {
                    width: 100%;
                    text: root.title;
                    color: InterfaceState.selected-index == index ? Colors.text-color-selected : Colors.text-color;
                    font-size: 16px;
                    vertical-alignment: center;
                    horizontal-alignment: left;
                }
            }
        }

        clicked => {
            InterfaceState.selected-index = index;
            InterfaceState.selected-title = root.title;
        }
    }
}

component Textfield {
    in property <string> label;
    in property <string> value;

    VerticalLayout {
        padding: 12px;
        spacing: 4px;
        height: self.preferred-height;

        Text {
            font-size: 16px;
            width: 100%;
            text: root.label;
        }

        Rectangle {
            background: Colors.input-background;
            border-radius: 4px;
            border-color: Colors.input-border;
            border-width: 1px;

            VerticalLayout {
                padding: 4px;
                height: self.preferred-height;

                TextInput {
                    text: root.value;
                    vertical-alignment: center;
                    font-size: 16px;
                }
            }
        }
    }
}

component ComponentListItem {
    Rectangle {
        border-radius: 6px;
        background: Colors.card-background;

        VerticalLayout {
            padding-top: 12px;
            padding-bottom: 12px;
            Text {
                text: "Transform";
                font-size: 16px;
                width: 100%;
                horizontal-alignment: center;
            }

            Textfield {
                label: "X position";
                value: "0.0";
            }

            Textfield {
                label: "Y position";
                value: "0.0";
            }

            Textfield {
                label: "Z position";
                value: "0.0";
            }

            Textfield {
                label: "X rotation";
                value: "0";
            }

            Textfield {
                label: "Y rotation";
                value: "0";
            }

            Textfield {
                label: "Z rotation";
                value: "0";
            }
        }
    }
}

component Panel {
    Rectangle {
        background: Colors.panel-background;
        border-radius: 12px;
        ScrollView {
            height: 100%;
            width: 300px;
            VerticalLayout {
                alignment: start;
                spacing: 10px;
                padding: 8px;

                @children
            }
        }
    }
}

export component GameDebugUI inherits Window {
    min-width: 800px;
    min-height: 600px;
    background: transparent;

    HorizontalLayout {
        width: 100%;
        spacing: 10px;
        padding: 15px;
        alignment: space-between;

        Panel {
            height: 100%;
            width: 300px;

            for i in 40: EnitityListItem {
                title: "Item " + (i + 1);
                index: i;
            }
        }

        if InterfaceState.selected-index != -1:Panel {
            height: 100%;
            width: 300px;

            TouchArea {
                height: 20px;
                mouse-cursor: pointer;
                Rectangle {
                    border-radius: 6px;
                    background: Colors.button-background;

                    Text {
                        text: "Close";
                        color: Colors.text-color;
                        font-size: 16px;
                    }
                }

                clicked => {
                    InterfaceState.selected-index = -1;
                }
            }

            Text {
                width: 100%;
                horizontal-alignment: center;
                text: InterfaceState.selected-title;
                font-size: 24px;
                color: Colors.card-background-selected;
            }

            for i in 10: ComponentListItem { }
        }
    }
}
