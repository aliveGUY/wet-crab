import { Colors } from "../globals/colors.slint";
import { Textfield } from "../common/textfield.slint";
import { InterfaceState } from "../globals/state.slint";

export component ComponentListItem {
    in property <string> component-json;
    in property <string> entity-id;
    
    // Function to trigger component change callback
    function trigger-component-change() {
        if (entity-id != "" && component-json != "") {
            InterfaceState.component-changed(entity-id, component-json);
        }
    }
    
    Rectangle {
        border-radius: 6px;
        background: Colors.card-background;

        VerticalLayout {
            padding-top: 12px;
            padding-bottom: 12px;
            
            Text {
                text: "Components";
                font-size: 18px;
                font-weight: 700;
                width: 100%;
                horizontal-alignment: center;
                color: Colors.text-color;
            }

            // For now, display the JSON in a scrollable text area
            // TODO: Parse JSON and create dynamic fields for each component
            Rectangle {
                height: 400px;
                border-width: 1px;
                border-color: Colors.input-border;
                border-radius: 4px;
                background: Colors.input-background;
                
                TextInput {
                    text: component-json;
                    font-family: "monospace";
                    font-size: 11px;
                    wrap: word-wrap;
                    color: Colors.text-color;
                    
                    edited => {
                        root.trigger-component-change();
                    }
                }
            }
            
            Text {
                text: "Note: This will be replaced with dynamic component fields";
                font-size: 10px;
                color: #888;
                width: 100%;
                horizontal-alignment: center;
                wrap: word-wrap;
            }
        }
    }
}
